after making our base template and template inheritance and our dynamic html in the front-end

- we went to check admin page

1) python manage.py makemigrations
2) python manage.py migrate
3) python manage.py createsuperuser
4) python manage.py runserver
5) go to /admin route 

- we created a post model in models.py then
- we made python manage.py makemigrations
- check migrations folder in your app
- before we make python manage.py migrate to run these commands in sqlite DB
- we could check the sqlite command that are translated from our python class to SQL and that's by
typing python manage.py sqlmigrate appname migrationNumber(0001 for example) 
ex : python manage.py blog 0001


-then python manage.py migrate
-then python manage.py shell
-we should then import 
from blog.models import Post
from django.contrib.auth.models import User

to get all users
- User.objects.all()
to get first one or last one 
- User.get.first()
- User.get.last()
to filter users by something
- User.get.filter(username="menaaziz")


 from blog.models import Post
>>> from django.contrib.auth.models import User
>>> User.objects.all()
<QuerySet [<User: menaaziz>, <User: testUser>]>
>>> User.objects.first()
<User: menaaziz>
>>> User.objects.last()
<User: testUser>
>>> User.objects.filter(username="menaaziz")
<QuerySet [<User: menaaziz>]>
>>> User.objects.filter(username="menaaziz").first()
<User: menaaziz>
>>> user = User.objects.filter(username="menaaziz").first()
>>> user
<User: menaaziz>
>>> user.id
1
>>> user.pk
1
>>> user = User.objects.get(id=1)
>>> user
<User: menaaziz>
>>> Post.objects.all()
<QuerySet []>
>>> post_1 = Post(title="Blog 1", content = "First Post Content!", author=user)
>>> Post.objects.all()
<QuerySet []>
>>> post_1.save()
>>> Post.objects.all()
<QuerySet [<Post: Post object (1)>]>
>>>
KeyboardInterrupt
>>> exit()

E:\HarvardX\Django Corey\django_project>python manage.py shell
Python 3.8.3 (tags/v3.8.3:6f8c832, May 13 2020, 22:20:19) [MSC v.1925 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from blog.models import Post
>>> from django.contrib.auth.models import User
>>> Post.objects.all()
<QuerySet [<Post: Blog 1>]>
>>> user = User.objects.filter(username="menaaziz").first()
>>> user
<User: menaaziz>
>>> post_2 = Post(title="Blog 2", content="Second Post Content!", author_id=user.id)
>>> post_2.save
<bound method Model.save of <Post: Blog 2>>
>>> post_2.save()
>>> Post.objects.all()
<QuerySet [<Post: Blog 1>, <Post: Blog 2>]>
>>> post = Post.objects.first()
>>> post.content
'First Post Content!'
>>> post.date_posted
datetime.datetime(2020, 8, 15, 21, 54, 47, 421585, tzinfo=<UTC>)
>>> post.author
<User: menaaziz>
>>> post.author.email
'menaaziz27@gmail.com'
>>> user.post_set
<django.db.models.fields.related_descriptors.create_reverse_many_to_one_manager.<locals>.RelatedManager object at 0x03F0A718>
>>> user.post_set.all()
<QuerySet [<Post: Blog 1>, <Post: Blog 2>]>

>>> user.post_set.create(title = "Blog 3", content = "Third Post Content!")
<Post: Blog 3>
>>> user.post_set.all()
<QuerySet [<Post: Blog 1>, <Post: Blog 2>, <Post: Blog 3>]>
>>> Post.objects.all()
<QuerySet [<Post: Blog 1>, <Post: Blog 2>, <Post: Blog 3>]>